{
  "version": 3,
  "sources": ["../../../../../node_modules/myst-ext-grid/dist/esm/index.js"],
  "sourcesContent": ["import { ParseTypesEnum } from 'myst-common';\nexport const gridDirective = {\n    name: 'grid',\n    arg: {\n        type: ParseTypesEnum.string,\n    },\n    // options:\n    // // https://sphinx-design.readthedocs.io/en/furo-theme/grids.html#grid-options\n    // 'class-container'\n    // 'class-row'\n    // gutter\n    // margin\n    // padding\n    // reverse\n    // outline\n    body: {\n        type: ParseTypesEnum.parsed,\n        required: true,\n    },\n    run(data) {\n        return [\n            {\n                type: 'grid',\n                columns: getColumns(data.arg),\n                children: data.body,\n            },\n        ];\n    },\n};\nfunction getColumns(columnString) {\n    const columns = (columnString !== null && columnString !== void 0 ? columnString : '1 2 2 3')\n        .split(/\\s/)\n        .map((s) => Number(s.trim()))\n        .filter((n) => !Number.isNaN(n))\n        .map((n) => Math.min(Math.max(Math.floor(n), 1), 12)); // Integer between 1 and 12\n    if (columns.length === 0 || columns.length > 4)\n        return [1, 2, 2, 3];\n    return columns;\n}\n"],
  "mappings": ";;;;;;AACO,IAAM,gBAAgB;AAAA,EACzB,MAAM;AAAA,EACN,KAAK;AAAA,IACD,MAAM,eAAe;AAAA,EACzB;AAAA,EAUA,MAAM;AAAA,IACF,MAAM,eAAe;AAAA,IACrB,UAAU;AAAA,EACd;AAAA,EACA,IAAI,MAAM;AACN,WAAO;AAAA,MACH;AAAA,QACI,MAAM;AAAA,QACN,SAAS,WAAW,KAAK,GAAG;AAAA,QAC5B,UAAU,KAAK;AAAA,MACnB;AAAA,IACJ;AAAA,EACJ;AACJ;AACA,SAAS,WAAW,cAAc;AAC9B,QAAM,WAAW,iBAAiB,QAAQ,iBAAiB,SAAS,eAAe,WAC9E,MAAM,IAAI,EACV,IAAI,CAAC,MAAM,OAAO,EAAE,KAAK,CAAC,CAAC,EAC3B,OAAO,CAAC,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,EAC9B,IAAI,CAAC,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;AACxD,MAAI,QAAQ,WAAW,KAAK,QAAQ,SAAS;AACzC,WAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AACtB,SAAO;AACX;",
  "names": []
}
